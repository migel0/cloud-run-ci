# Read more about this feature here: https://docs.gitlab.com/ee/user/application_security/sast/
#
# Configure the scanning tool through the environment variables.
# List of the variables: https://gitlab.com/gitlab-org/security-products/sast#settings
# How to set: https://docs.gitlab.com/ee/ci/yaml/#variables

variables:
  # Setting this variable will affect all Security templates
  # (SAST, Dependency Scanning, ...)
  SECURE_ANALYZERS_PREFIX: "registry.gitlab.com/gitlab-org/security-products/analyzers"

  # Deprecated, use SECURE_ANALYZERS_PREFIX instead
  SAST_ANALYZER_IMAGE_PREFIX: "$SECURE_ANALYZERS_PREFIX"

  SAST_DEFAULT_ANALYZERS: " phpcs-security-audit, eslint, tslint, secrets "
  SAST_ANALYZER_IMAGE_TAG: 2
  SAST_DISABLE_DIND: "false"
  SCAN_KUBERNETES_MANIFESTS: "false"

sast:
 stage: test
 allow_failure: true
 artifacts:
   reports:
     sast: gl-sast-report.json
 rules:
   - if: $SAST_DISABLED || $SAST_DISABLE_DIND == 'true'
     when: never
   - if: '$CI_COMMIT_BRANCH == "master"'
     when: never
   - if: $CI_MERGE_REQUEST_IID && 
         $GITLAB_FEATURES =~ /\bsast\b/
     when: always
 image: docker:stable
 before_script:
  - echo "DOing SAST"
 variables:
   SEARCH_MAX_DEPTH: 4
   DOCKER_DRIVER: overlay2
   DOCKER_TLS_CERTDIR: ""
 services:
   - docker:stable-dind
 script:
  - echo " Sast"
 #  - |
 #    if ! docker info &>/dev/null; then
 #      if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
 #        export DOCKER_HOST='tcp://localhost:2375'
 #      fi
 #    fi
 #  - |
 #    docker run  --rm  \
 #      $(awk 'BEGIN{for(v in ENVIRON) print v}' | grep -v -E '^(DOCKER_|CI|GITLAB_|FF_|HOME|PWD|OLDPWD|PATH|SHLVL|HOSTNAME)' | awk '{printf " -e %s", $0}') \
 #      --volume "$PWD:/code" \
 #      --volume /var/run/docker.sock:/var/run/docker.sock \
 #      "registry.gitlab.com/gitlab-org/security-products/sast:$SAST_ANALYZER_IMAGE_TAG" /app/bin/run /code

sast-analyzer:
 extends: sast
 services:
   - docker:stable-dind
 variables:
   SEARCH_MAX_DEPTH: 4
   DOCKER_DRIVER: overlay2
   DOCKER_TLS_CERTDIR: ""
 rules:
   - if: $SAST_DISABLED || $SAST_DISABLE_DIND == 'false'
     when: never
   - if: $CI_MERGE_REQUEST_IID &&
         $GITLAB_FEATURES =~ /\bsast\b/
 script:
   - echo $PWD
   - |
     if ! docker info &>/dev/null; then
       if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
         export DOCKER_HOST='tcp://localhost:2375'
       fi
     fi
   - |
     docker run \
       $(awk 'BEGIN{for(v in ENVIRON) print v}' | grep -v -E '^(DOCKER_|CI|GITLAB_|FF_|HOME|PWD|OLDPWD|PATH|SHLVL|HOSTNAME)' | awk '{printf " -e %s", $0}') \
       --volume "$PWD:/code" \
       --volume /var/run/docker.sock:/var/run/docker.sock \
       "registry.gitlab.com/gitlab-org/security-products/sast:$SAST_ANALYZER_IMAGE_TAG" /analyzer run


secrets-sast:
 extends: sast-analyzer
 image:
   name: "$SAST_ANALYZER_IMAGE_PREFIX/secrets:$SAST_ANALYZER_IMAGE_TAG"
 rules:
   - if: $SAST_DISABLED || $SAST_DISABLE_DIND == 'false'
     when: never
   - if: $CI_MERGE_REQUEST_IID &&
         $GITLAB_FEATURES =~ /\bsast\b/ &&
         $SAST_DEFAULT_ANALYZERS =~ /secrets/

phpcs-security-audit-sast:
 extends: sast-analyzer
 image:
   name: "$SAST_ANALYZER_IMAGE_PREFIX/phpcs-security-audit:$SAST_ANALYZER_IMAGE_TAG"
 rules:
   - if: $SAST_DISABLED || $SAST_DISABLE_DIND == 'false'
     when: never
   - if: $CI_MERGE_REQUEST_IID &&
         $GITLAB_FEATURES =~ /\bsast\b/ &&
         $SAST_DEFAULT_ANALYZERS =~ /phpcs-security-audit/
     exists:
       - '**/*.php'
eslint-sast:
 extends: sast-analyzer
 image:
   name: "$SAST_ANALYZER_IMAGE_PREFIX/eslint:$SAST_ANALYZER_IMAGE_TAG"
 rules:
   - if: $SAST_DISABLED || $SAST_DISABLE_DIND == 'false'
     when: never
   - if: $CI_MERGE_REQUEST_IID &&
         $GITLAB_FEATURES =~ /\bsast\b/ &&
         $SAST_DEFAULT_ANALYZERS =~ /eslint/
     exists:
       - '**/*.html'
       - '**/*.js'
